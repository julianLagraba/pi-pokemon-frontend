{"ast":null,"code":"export default function validate(input) {\n  let validateName = /^[a-z]+$/i;\n  let validateUrl = /^(ftp|http|https):\\/\\/[^ \"]+$/;\n  let errors = {};\n  if (!input.nombre) {\n    errors.nombre = \"Se requiere un nombre\";\n  } else if (input.nombre.length < 3) {\n    errors.nombre = \"El nombre debe tener como minimo 3 letras\";\n  } else if (!validateName.test(input.nombre)) {\n    errors.nombre = \"El nombre solo puede contener letras\";\n  } else if (!input.vida) {\n    errors.vida = \"Debes completar el campo ¨vida¨\";\n  } else if (parseInt(input.vida) < 1) {\n    errors.vida = \"La vida debe ser mayor a 1\";\n  } else if (!input.ataque) {\n    errors.ataque = \"Debes completar el campo ¨ataque¨\";\n  } else if (parseInt(input.ataque) < 1) {\n    errors.ataque = \"El ataque debe ser mayor a 1\";\n  } else if (!input.defensa) {\n    errors.defensa = \"Debes completar el campo ¨defensa¨\";\n  } else if (parseInt(input.defensa) < 1) {\n    errors.defensa = \"la defensa debe ser mayor a 1\";\n  } else if (!input.velocidad) {\n    errors.velocidad = \"Debes completar el campo ¨velocidad¨\";\n  } else if (parseInt(input.velocidad) < 1) {\n    errors.velocidad = \"La velocidad debe ser mayor a 1\";\n  } else if (!input.altura) {\n    errors.altura = \"Debes completar el campo ¨altura¨\";\n  } else if (parseInt(input.altura) < 1) {\n    errors.altura = \"La altura debe ser mayor a 1\";\n  } else if (!input.peso) {\n    errors.peso = \"Debes completar el campo ¨peso¨\";\n  } else if (parseInt(input.peso) < 1) {\n    errors.peso = \"El peso debe ser mayor a 1\";\n  } else if (!input.img) {\n    errors.img = \"Se requiere una URL\";\n  } else if (!validateUrl.test(input.img)) {\n    errors.img = \"Debe ser una URL valida \";\n  } else if (input.tipos.length === 0) {\n    errors.tipos = \"Debe seleccionar un tipo\";\n  }\n  return errors;\n}","map":{"version":3,"names":["validate","input","validateName","validateUrl","errors","nombre","length","test","vida","parseInt","ataque","defensa","velocidad","altura","peso","img","tipos"],"sources":["C:/Users/JulianLagraba/Desktop/PI-pokemons-main/client/src/components/validations.js"],"sourcesContent":["export default function validate (input)\n    {\n        let validateName = /^[a-z]+$/i;\n        let validateUrl = /^(ftp|http|https):\\/\\/[^ \"]+$/;\n        let errors={}\n        if(!input.nombre)\n        {\n            errors.nombre =\"Se requiere un nombre\"\n        }\n        else if( input.nombre.length < 3){\n            errors.nombre =\"El nombre debe tener como minimo 3 letras\"\n        }\n        else if(!validateName.test(input.nombre)){\n            errors.nombre =\"El nombre solo puede contener letras\"\n        }\n        else if (!input.vida ) {\n            errors.vida = \"Debes completar el campo ¨vida¨\";\n        }\n        else if(parseInt(input.vida) < 1){\n            errors.vida = \"La vida debe ser mayor a 1\";\n        }\n        else if (!input.ataque ) {\n            errors.ataque = \"Debes completar el campo ¨ataque¨\";\n        }\n        else if(parseInt(input.ataque) < 1){\n            errors.ataque= \"El ataque debe ser mayor a 1\";\n        }\n        else if (!input.defensa ) {\n            errors.defensa = \"Debes completar el campo ¨defensa¨\";\n        }\n        else if(parseInt(input.defensa) < 1){\n            errors.defensa = \"la defensa debe ser mayor a 1\";\n        }\n        else if (!input.velocidad) {\n            errors.velocidad = \"Debes completar el campo ¨velocidad¨\";\n        }\n        else if(parseInt(input.velocidad) < 1){\n            errors.velocidad = \"La velocidad debe ser mayor a 1\";\n        }\n        else if (!input.altura ) {\n            errors.altura = \"Debes completar el campo ¨altura¨\";\n        }\n        else if(parseInt(input.altura) < 1){\n            errors.altura = \"La altura debe ser mayor a 1\";\n        }\n        else if (!input.peso ) {\n            errors.peso = \"Debes completar el campo ¨peso¨\";\n        }\n        else if(parseInt(input.peso) < 1){\n            errors.peso = \"El peso debe ser mayor a 1\";\n        }\n        else if(!input.img){\n            errors.img = \"Se requiere una URL\"\n        }\n       \n        else if(!validateUrl.test(input.img)){\n            errors.img = \"Debe ser una URL valida \";\n        }\n        else if(input.tipos.length===0){\n        \n            errors.tipos= \"Debe seleccionar un tipo\"\n        }\n        \n        return errors\n    }"],"mappings":"AAAA,eAAe,SAASA,QAAQA,CAAEC,KAAK,EACnC;EACI,IAAIC,YAAY,GAAG,WAAW;EAC9B,IAAIC,WAAW,GAAG,+BAA+B;EACjD,IAAIC,MAAM,GAAC,CAAC,CAAC;EACb,IAAG,CAACH,KAAK,CAACI,MAAM,EAChB;IACID,MAAM,CAACC,MAAM,GAAE,uBAAuB;EAC1C,CAAC,MACI,IAAIJ,KAAK,CAACI,MAAM,CAACC,MAAM,GAAG,CAAC,EAAC;IAC7BF,MAAM,CAACC,MAAM,GAAE,2CAA2C;EAC9D,CAAC,MACI,IAAG,CAACH,YAAY,CAACK,IAAI,CAACN,KAAK,CAACI,MAAM,CAAC,EAAC;IACrCD,MAAM,CAACC,MAAM,GAAE,sCAAsC;EACzD,CAAC,MACI,IAAI,CAACJ,KAAK,CAACO,IAAI,EAAG;IACnBJ,MAAM,CAACI,IAAI,GAAG,iCAAiC;EACnD,CAAC,MACI,IAAGC,QAAQ,CAACR,KAAK,CAACO,IAAI,CAAC,GAAG,CAAC,EAAC;IAC7BJ,MAAM,CAACI,IAAI,GAAG,4BAA4B;EAC9C,CAAC,MACI,IAAI,CAACP,KAAK,CAACS,MAAM,EAAG;IACrBN,MAAM,CAACM,MAAM,GAAG,mCAAmC;EACvD,CAAC,MACI,IAAGD,QAAQ,CAACR,KAAK,CAACS,MAAM,CAAC,GAAG,CAAC,EAAC;IAC/BN,MAAM,CAACM,MAAM,GAAE,8BAA8B;EACjD,CAAC,MACI,IAAI,CAACT,KAAK,CAACU,OAAO,EAAG;IACtBP,MAAM,CAACO,OAAO,GAAG,oCAAoC;EACzD,CAAC,MACI,IAAGF,QAAQ,CAACR,KAAK,CAACU,OAAO,CAAC,GAAG,CAAC,EAAC;IAChCP,MAAM,CAACO,OAAO,GAAG,+BAA+B;EACpD,CAAC,MACI,IAAI,CAACV,KAAK,CAACW,SAAS,EAAE;IACvBR,MAAM,CAACQ,SAAS,GAAG,sCAAsC;EAC7D,CAAC,MACI,IAAGH,QAAQ,CAACR,KAAK,CAACW,SAAS,CAAC,GAAG,CAAC,EAAC;IAClCR,MAAM,CAACQ,SAAS,GAAG,iCAAiC;EACxD,CAAC,MACI,IAAI,CAACX,KAAK,CAACY,MAAM,EAAG;IACrBT,MAAM,CAACS,MAAM,GAAG,mCAAmC;EACvD,CAAC,MACI,IAAGJ,QAAQ,CAACR,KAAK,CAACY,MAAM,CAAC,GAAG,CAAC,EAAC;IAC/BT,MAAM,CAACS,MAAM,GAAG,8BAA8B;EAClD,CAAC,MACI,IAAI,CAACZ,KAAK,CAACa,IAAI,EAAG;IACnBV,MAAM,CAACU,IAAI,GAAG,iCAAiC;EACnD,CAAC,MACI,IAAGL,QAAQ,CAACR,KAAK,CAACa,IAAI,CAAC,GAAG,CAAC,EAAC;IAC7BV,MAAM,CAACU,IAAI,GAAG,4BAA4B;EAC9C,CAAC,MACI,IAAG,CAACb,KAAK,CAACc,GAAG,EAAC;IACfX,MAAM,CAACW,GAAG,GAAG,qBAAqB;EACtC,CAAC,MAEI,IAAG,CAACZ,WAAW,CAACI,IAAI,CAACN,KAAK,CAACc,GAAG,CAAC,EAAC;IACjCX,MAAM,CAACW,GAAG,GAAG,0BAA0B;EAC3C,CAAC,MACI,IAAGd,KAAK,CAACe,KAAK,CAACV,MAAM,KAAG,CAAC,EAAC;IAE3BF,MAAM,CAACY,KAAK,GAAE,0BAA0B;EAC5C;EAEA,OAAOZ,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module"}