[{"C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\index.js":"1","C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\App.js":"2","C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\reportWebVitals.js":"3","C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\store\\index.js":"4","C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\components\\LandingPage.jsx":"5","C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\components\\Home.jsx":"6","C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\components\\Create.jsx":"7","C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\components\\Detail.jsx":"8","C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\components\\validations.js":"9","C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\components\\Loading.js":"10","C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\components\\imagenes\\Imagenes.js":"11","C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\components\\SearchBar.jsx":"12","C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\components\\Paginado.jsx":"13","C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\components\\Cards\\Cards.jsx":"14","C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\reducer\\index.js":"15","C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\actions\\index.js":"16","C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\components\\Card\\Card.jsx":"17"},{"size":608,"mtime":1664345560000,"results":"18","hashOfConfig":"19"},{"size":656,"mtime":1664345560000,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1664345560000,"results":"21","hashOfConfig":"19"},{"size":274,"mtime":1664345560000,"results":"22","hashOfConfig":"19"},{"size":779,"mtime":1664345560000,"results":"23","hashOfConfig":"19"},{"size":5335,"mtime":1664345560000,"results":"24","hashOfConfig":"19"},{"size":6850,"mtime":1664345560000,"results":"25","hashOfConfig":"19"},{"size":1975,"mtime":1664345560000,"results":"26","hashOfConfig":"19"},{"size":2229,"mtime":1664345560000,"results":"27","hashOfConfig":"19"},{"size":298,"mtime":1664345560000,"results":"28","hashOfConfig":"19"},{"size":158,"mtime":1664345560000,"results":"29","hashOfConfig":"19"},{"size":787,"mtime":1664345560000,"results":"30","hashOfConfig":"19"},{"size":971,"mtime":1664345560000,"results":"31","hashOfConfig":"19"},{"size":483,"mtime":1664345560000,"results":"32","hashOfConfig":"19"},{"size":4290,"mtime":1664345560000,"results":"33","hashOfConfig":"19"},{"size":1981,"mtime":1664345560000,"results":"34","hashOfConfig":"19"},{"size":538,"mtime":1664345560000,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1anmf5c",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\index.js",[],"C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\App.js",[],"C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\reportWebVitals.js",[],"C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\store\\index.js",[],"C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\components\\LandingPage.jsx",[],"C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\components\\Home.jsx",["74","75"],"import React from \"react\";\nimport {useState, useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux'\nimport { getPokemons, filterPokemonsByType, filterCreated, orderName } from \"../actions\";\nimport {Link} from \"react-router-dom\"\nimport styles from './Home.module.css'\nimport Paginado from \"./Paginado\";\nimport Cards from \"./Cards/Cards\";\nimport SearchBar from \"./SearchBar\";\nimport { landingImg } from \"./imagenes/Imagenes\";\nimport Loading from \"./Loading\";\n\n\nexport default function Home(){\n\n    const dispatch = useDispatch()\n    const allPokemons = useSelector((state)=> state.pokemons) \n    const [currentPage, setCurrentPage] = useState(1) //guardar y setear la pagina actual\n    const [pokemonsPerPage, setPokemonsPerPage] = useState(12) //guardar y setear cuantos personajes pokemons quiero por pagina(12)\n    const [order, setOrder] = useState(\"\")\n    const indexOffLastPkemon = currentPage * pokemonsPerPage \n    const indexOffFirstPkemon = indexOffLastPkemon - pokemonsPerPage \n    const currentPokemons = allPokemons.slice(indexOffFirstPkemon, indexOffLastPkemon)//agarra solo desde el indice del primero y el del ultimo en una pagina\n\n    const paginado = (pageNumber) => {\n        setCurrentPage(pageNumber)\n    }\n\n    useEffect (()=>{\n        dispatch(getPokemons());\n    },[dispatch])\n\n    function handleFilterType(e){\n        dispatch(filterPokemonsByType(e.target.value))\n        setCurrentPage(1)\n    }\n    function handleFilterCreated(e){\n        dispatch(filterCreated(e.target.value))\n        setCurrentPage(1)\n    }\n    const handleSort= (e) => {\n        e.preventDefault()\n        dispatch(orderName(e.target.value));\n        paginado(1)\n        setOrder(`Ordenado ${e.target.value}`)\n        document.getElementById(\"input\").value = \"\";\n    }\n\n\n    return(\n        <div  className={styles.bg}>\n            <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono&display=swap\" rel=\"stylesheet\"></link>\n            <link href= \"http://fonts.cdnfonts.com/css/pokemon-solid\" rel=\"hoja de estilo\"></link>\n            <link href=\" http://fonts.cdnfonts.com/css/pokemon-hollow \" rel=\"hoja de estilo\"></link>\n           \n            <img src={landingImg} className={styles.image} alt=\"no encontre la imagen\" ></img>\n            <div className={styles.navBar}>\n                <Link to='/pokemon'><button className={styles.boton}>Crear PoKeMoN</button></Link>\n            \n                <div className={styles.filtro}>\n                    <select className={styles.boton} onChange={e => {handleSort(e)}}>\n                        <option value=\"ord\" disabled selected>Ordenar:</option>\n                        <option value='asc'>Ascendente</option>\n                        <option value='desc'>Descendente</option>\n                        <option value=\"may\">Mayor ataque</option>\n                        <option value=\"men\">Menos ataque</option>\n                    </select>\n                    <select className={styles.boton} onChange={e => handleFilterCreated(e)}>\n                        <option value=\"all\" disabled selected>Creaci√≥n:</option>\n                        <option value=\"todos\">Todos</option>\n                        <option value=\"created\">Creados</option>\n                        <option value=\"api\">Existente</option>\n                    </select>\n                    <select className={styles.boton} onChange={e => {handleFilterType(e)}}>\n                        <option value=\"todos\" disabled selected>Tipo:</option>\n                        <option value=\"todos\">Todos</option>\n                        <option value=\"normal\">Normal</option>\n                        <option value=\"fighting\">Lucha</option>\n                        <option value=\"flying\">Volador</option>\n                        <option value=\"posion\">Posion</option>\n                        <option value=\"ground\">Terrestre</option>\n                        <option value=\"rock\">Roca</option>\n                        <option value=\"bug\">Insecto</option>\n                        <option value=\"ghost\">Fantasma</option>\n                        <option value=\"steel\">Acero</option>\n                        <option value=\"fire\">Fuego</option>\n                        <option value=\"water\">Agua</option>\n                        <option value=\"grass\">Cesped</option>\n                        <option value=\"electric\">Electrico</option>\n                        <option value=\"psychic\">Psiquico</option>\n                        <option value=\"ice\">Hielo</option>\n                        <option value=\"dragon\">Dragon</option>\n                        <option value=\"dark\">Oscuro</option>\n                        <option value=\"fairy\">Hada</option>\n                        <option value=\"unknown\">Desconocido</option>\n                        <option value=\"shadow\">Sombra</option>\n                    </select>\n                    \n                    \n                </div>\n                <SearchBar/>\n            </div>\n                \n            <Paginado\n            pokemonsPerPage={pokemonsPerPage}\n            allPokemons = {allPokemons.length}\n            paginado = {paginado}\n            />\n            \n                \n            {!allPokemons.length \n                ? <Loading/> \n                : <Cards allPokemons={currentPokemons}/>           \n            }\n        </div>\n    )\n    \n}","C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\components\\Create.jsx",["76"],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Link,useHistory } from \"react-router-dom\";\nimport { postPokemon, getTypes } from \"../actions\";\nimport { useDispatch, useSelector} from \"react-redux\"\nimport styles from './Create.module.css'\nimport validate from \"./validations\";  \nimport { background } from \"./imagenes/Imagenes\";\n \n\nexport default function PokemonCreate(){\n    const dispatch= useDispatch()\n    const allPokemons = useSelector((state)=>state.pokemons)\n    const types = useSelector((state=> state.types))\nconst history = useHistory()\nconst [errors, setErrors] = useState({})\n    const [input, setInput] = useState({\n        nombre: \"\",\n    vida: \"\",\n    ataque: \"\",\n    defensa:\"\",\n    velocidad:\"\",\n    altura:\"\",\n    peso:\"\",\n    tipos: [],\n    img: \"\"\n    })\n\n    function handleSubmit(e){\n        e.preventDefault()\n        let verif = allPokemons.find(e=> e.nombre === input.nombre)\n        if(verif){\n            alert(\"Ya existe un pokemon con ese nombre!!!\") \n        }\n        else{ \n        if (!errors.nombre) {\n        \n        \n        dispatch(postPokemon(input))  \n        alert(\"pokemon creado correctamente!!\")\n        setInput({\n            nombre: \"\",\n            vida: \"\",\n            ataque: \"\",\n            defensa:\"\",\n            velocidad:\"\",\n            altura:\"\",\n            peso:\"\",\n            tipos: [],\n            img: \"\"\n        })    \n        history.push(\"/home\")\n    }\n    else{alert(\"Alguno de los campos es incorrecto\")}\n   \n    }\n}\n\n    function handleChange(e){\n        setInput({\n            ...input,\n            [e.target.name] : e.target.value\n        })\n        setErrors(validate({\n            ...input,\n            [e.target.name] : e.target.value\n        }))\n        console.log(input)\n    }\n    \n    function handleSelect(e){\n     \n        if(input.tipos.length < 2)\n        {\n            if(!input.tipos.includes(e.target.value))\n            {\n                setInput({\n                                ...input,\n                               tipos: [...input.tipos, e.target.value]\n                            })\n                            setErrors(validate({\n                                ...input,\n                                tipos: [...input.tipos, e.target.value]\n                            }))\n            }   \n        }\n        \n    }\n    function handleDelete(e){\n       \n        setInput({\n            ...input,\n            tipos: input.tipos.filter(a=>a!==e)\n        })\n        setErrors(validate({\n            ...input,\n            tipos: input.tipos.filter(a=>a!==e)\n        }))\n        \n    }\n    useEffect(()=> {\n        dispatch(getTypes())\n}, [])\n\nconsole.log(input.tipos)\nreturn(\n    <div  className={styles.bg}>\n        <img src={background} className={styles.image} alt=\"no encontre la imagen\" ></img>\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono&display=swap\" rel=\"stylesheet\"></link>\n    <link href= \"http://fonts.cdnfonts.com/css/pokemon-solid\" rel=\"hoja de estilo\"></link>\n    <link href=\" http://fonts.cdnfonts.com/css/pokemon-hollow \" rel=\"hoja de estilo\"></link>  \n        \n      \n<form onSubmit={(e)=>handleSubmit(e)} className={styles.pokedex}>\n<h1 className={styles.h1}>PokePedia</h1>\n<div className={styles.glass}>\n<h1>Crea tu propio Pokemon</h1>\n\n<div className={styles.c1}>\n    <div className={styles.a}>\n    <h3>Nombre: </h3>\n    <input className={styles.ord} type=\"text\" value={input.nombre} name =\"nombre\" onChange={handleChange}/>\n   \n    </div>\n    <div className={styles.a}>\n    <h3>Vida:</h3>\n    <input className={styles.ord} type=\"number\" value={input.vida} onChange={handleChange} name =\"vida\" />\n    </div>\n    <div className={styles.a}>\n    <h3>Ataque: </h3>\n    <input className={styles.ord} type=\"number\" value={input.ataque} onChange={handleChange} name =\"ataque\" />\n    \n    </div>\n    <div className={styles.a}>\n    <h3>Defensa:</h3>\n    <input className={styles.ord} type=\"number\" value={input.defensa} onChange={handleChange} name =\"defensa\" />\n    \n    </div>\n</div>\n<div className={styles.c2}>\n    <div className={styles.a}>\n    <h3>Velocidad:</h3>\n    <input className={styles.ord} type=\"number\" value={input.velocidad} onChange={handleChange} name =\"velocidad\" />\n    \n    </div>\n    <div className={styles.a}>\n    <h3>Altura:</h3>\n    <input className={styles.ord} type=\"number\" value={input.altura} onChange={handleChange} name =\"altura\" />\n   \n    </div>\n    <div className= {styles.a}>\n    <h3>Peso:</h3>\n    <input className={styles.ord} type=\"number\" value={input.peso} onChange={handleChange} name =\"peso\" />\n    \n    </div>\n    <div className= {styles.a}>\n    <h3>Imagen:</h3>\n    <input className={styles.ord} placeholder=\"URL imagen\" type=\"text\" value={input.img} name =\"img\" onChange={handleChange}/>\n    \n    </div>\n    </div>\n   <div>\n    <div className={styles.submit} >\n    <div className={styles.types}> \n    \n    <select onChange={handleSelect} className={styles.ord}>\n   \n        {types.map((e) => (            \n            <option value = {e.id}>{e.nombre}</option>\n        ) )}\n       \n    </select>\n    </div>\n    <h4 className={styles.h4type}>Selecciona el tipo de pokemon:</h4>\n    <h5 className={styles.h5type}>Recuerda que solo puedes elegir 2 tipos</h5>\n    <button type=\"submit\"  className={styles.button}>Crear Pokemon</button>\n    {Object.entries(errors).length !== 0 ?\n<div className={styles.contenedor}>\n<div className={styles.errores}>\n    \n<p className={errors.nombre ? styles.errors : styles.errors1}>{errors.nombre}</p>\n<p className={errors.altura? styles.errors : styles.errors1}>{errors.altura}</p>\n<p className={errors.defensa ? styles.errors : styles.errors1}>{errors.defensa}</p>\n<p className={errors.ataque ? styles.errors : styles.errors1}>{errors.ataque}</p>\n<p className={errors.img ? styles.errors : styles.errors1}>{errors.img}</p>\n<p className={errors.velocidad ? styles.errors : styles.errors1}>{errors.velocidad}</p>\n<p className={errors.altura ? styles.errors : styles.errors1}>{errors.altura}</p>\n<p className={errors.peso ? styles.errors : styles.errors1}>{errors.peso}</p>\n<p className={errors.tipos ? styles.errors : styles.errors1}>{errors.tipos}</p>\n</div></div>:\n<div className={styles.errors1}></div>\n}\n    <Link to= \"/home\"><button type=\"button\" className={styles.button1}>Volver a inicio</button></Link>\n\n\n</div>\n\n</div>\n</div>\n</form>\n<div className={styles.classtype}>\n<ul><li>{input.tipos.map(tipoId=>{\n            const type = types.find(type => type.id === parseInt(tipoId))\n            return(\n                <div className={styles.quitcard}>\n                    <p>{type.nombre}</p>\n                    <button className={styles.button2} onClick={()=>handleDelete(tipoId)}>x</button>\n                </div>\n            )\n        })}            \n        </li></ul>\n</div>\n        \n    </div>\n)\n\n}","C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\components\\Detail.jsx",["77","78"],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getDetail } from \"../actions\";\nimport { useDispatch, useSelector} from \"react-redux\"\nimport styles from \"./Detail.module.css\"\nimport Loading from \"./Loading\";\n\nexport default function Detail(props){\n    const dispatch = useDispatch()\n    const myPokemon = useSelector ((state) => state.detail)\n\n    \n    useEffect(()=>{\n        dispatch(getDetail(props.match.params.id));\n    },[dispatch])\n\n    \n    function handleBack(e){\n        myPokemon.pop()\n    }\n\n    return (\n        <div>\n            {\n                myPokemon.length>0 ?\n                <div className={styles.bg}>\n                    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono&display=swap\" rel=\"stylesheet\"></link>\n                    <div className={styles.pokedex} >\n                    <div className={styles.glass}>\n                    \n                    <h1>{myPokemon[0].nombre}</h1>\n                    <img src ={myPokemon[0].img}  className={styles.pokeimage} alt=\"\" width=\"300px\" height=\"300px\"></img>\n                    <div className={styles.info}> \n                    <h3>Ataque: {myPokemon[0].ataque} </h3>\n                    <h3>Defensa: {myPokemon[0].defensa}</h3>\n                    <h3>Vida: {myPokemon[0].vida}</h3>\n                    <h3>Velocidad: {myPokemon[0].velocidad}</h3>\n                    <h3>Altura: {(myPokemon[0].altura)/10}m</h3>\n                    <h3>Peso: {myPokemon[0].peso}kg</h3>\n                    <h3>Tipos: {myPokemon[0].tipos.map(e=>e.nombre+ \" \")} </h3>\n                    </div>\n                        <Link to= \"/home\">\n                        <button className={styles.button} onClick={handleBack}>Volver a inicio</button>\n                        </Link>\n          </div>\n          </div>\n         \n                </div>:\n                <div></div>\n            }\n          <Loading/>\n        </div>\n    )\n}","C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\components\\validations.js",[],"C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\components\\Loading.js",[],"C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\components\\imagenes\\Imagenes.js",[],"C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\components\\SearchBar.jsx",[],"C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\components\\Paginado.jsx",["79"],"import React from \"react\";\nimport styles from './Paginado.module.css'\n\nexport default function Paginado({pokemonsPerPage, allPokemons, paginado}){ //declaro mi paginado y me traigo las propiedades\n    const pageNumber = []\n\n    for(let i=1; i<= Math.ceil(allPokemons/pokemonsPerPage); i++){ //recorro y tomo el numero redondo q resulta de dividir todos los pokemons por los pokemons por pagina que yo quiero\n        pageNumber.push(i)  \n    }\n    return(\n        <div className={styles.paginado}>\n        <nav className={styles.navpaginado}>\n            <ul className=\"paginado\">\n                {pageNumber &&\n                pageNumber.map(number =>(  //si tengo ese areglo lo mapeo y devolveme cada uno de los numeros q devuelva el paginado\n                    <li className=\"number\" key={number}>\n                    <a onClick={()=> paginado(number)}>{number}</a> \n                    </li>\n                ))}\n            </ul>\n        </nav>\n        </div>\n    )\n}","C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\components\\Cards\\Cards.jsx",[],"C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\reducer\\index.js",[],"C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\actions\\index.js",[],"C:\\Users\\JulianLagraba\\Desktop\\PI-pokemons-main\\client\\src\\components\\Card\\Card.jsx",[],{"ruleId":"80","severity":1,"message":"81","line":19,"column":29,"nodeType":"82","messageId":"83","endLine":19,"endColumn":47},{"ruleId":"80","severity":1,"message":"84","line":20,"column":12,"nodeType":"82","messageId":"83","endLine":20,"endColumn":17},{"ruleId":"85","severity":1,"message":"86","line":103,"column":4,"nodeType":"87","endLine":103,"endColumn":6,"suggestions":"88"},{"ruleId":"80","severity":1,"message":"89","line":2,"column":21,"nodeType":"82","messageId":"83","endLine":2,"endColumn":29},{"ruleId":"85","severity":1,"message":"90","line":16,"column":7,"nodeType":"87","endLine":16,"endColumn":17,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":17,"column":21,"nodeType":"94","endLine":17,"endColumn":56},"no-unused-vars","'setPokemonsPerPage' is assigned a value but never used.","Identifier","unusedVar","'order' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["95"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["96"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [dispatch]",{"range":"101","text":"102"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"103","text":"104"},[2667,2669],"[dispatch]",[500,510],"[dispatch, props.match.params.id]"]